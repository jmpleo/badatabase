version: '3.9'

x-postgres-common:
  &postgres
  user: postgres
  restart: always
  healthcheck:
    test: 'pg_isready -U badatabase --dbname=badatabase'
    interval: 10s
    timeout: 5s
    retries: 5

services:
  primary:
    <<: *postgres
    build:
      context: .
      dockerfile: ./primary/Dockerfile
    ports:
      - 5454:5432
    env_file:
      - ./primary/primary.env
      - ./kerberos/kerberos.env
    volumes:
      - keytab:/keytab
      - primary_pgdata:/var/lib/postgresql/data
    command: |
      postgres
      -c wal_level=replica
      -c hot_standby=on
      -c max_wal_senders=10
      -c max_replication_slots=10
      -c hot_standby_feedback=on
      -c ssl=on
      -c ssl_cert_file='/ssl/postgres.crt'
      -c ssl_key_file='/ssl/postgres.key'
      -c krb_server_keyfile='/keytab/badatabase.keytab'
    depends_on:
      - kdc
    networks:
      - realm-network
    hostname: primary.badatabase.local

  replica:
    <<: *postgres
    build: ./replica
    ports:
      - 5353:5432
    env_file:
      - ./replica/replica.env
    volumes:
      - replica_pgdata:/var/lib/postgresql/data
    depends_on:
      - primary
    networks:
      - realm-network
    hostname: replica.badatabase.local

  backup:
    build: ./backup
    env_file: ./backup/backup.env
    volumes:
      - primary_pgdata:/var/lib/postgresql/data
      - backup:/backup
    restart: always
      #deploy:
      #restart_policy:
      # condition: any
      # delay: 7d
    depends_on:
      - primary
    networks:
      - realm-network
    hostname: backup.badatabase.local

  kdc:
    build: ./kerberos/kdc
    env_file: ./kerberos/kerberos.env
    volumes:
      # This is needed otherwise there won't be enough entropy to generate a new kerberos realm
      - /dev/urandom:/dev/random
      - keytab:/keytab
    networks:
      - realm-network
    hostname: kdc.badatabase.local

  client:
    build: ./kerberos/client
    env_file: ./kerberos/kerberos.env
    depends_on:
      - kdc
    volumes:
      - keytab:/keytab
    networks:
      - realm-network
    hostname: client.badatabase.local

volumes:
  primary_pgdata:
  replica_pgdata:
  keytab:
  backup:

networks:
  realm-network:
    name: badatabase.local
