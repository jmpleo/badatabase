version: '3.8'
x-postgres-common:
  &postgres-badatabase
  image: postgres:15.5-alpine
  #build: .
  user: postgres
  restart: always
  healthcheck:
    test: 'pg_isready -U badatabase --dbname=badatabase'
    interval: 10s
    timeout: 5s
    retries: 5

services:
  badatabase_primary:
    <<: *postgres-badatabase
    ports:
      - 5454:5432
    env_file:
      - .env
    volumes:
      - pgdata_primary:/var/lib/postgresql/data
      - ./postgresql.conf:/etc/postgresql/postgresql.conf
      - ./pg_hba.conf:/etc/postgresql/pg_hba.conf
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - keytab:/keytab
    command: |
      postgres
      -c config_file=/etc/postgresql/postgresql.conf

  badatabase_replica:
    <<: *postgres-badatabase
    ports:
      - 5353:5432
    env_file:
      - .replica.env
    volumes:
      - pgdata_replica:/var/lib/postgresql/data
    command: |
      bash -c "
      until pg_basebackup --pgdata=/var/lib/postgresql/data -R --slot=replication_slot --host=badatabase_primary --port=5432
      do
      echo 'Waiting for primary to connect...'
      sleep 1s
      done
      echo 'Backup done, starting replica...'
      chmod 0700 /var/lib/postgresql/data
      postgres
      "
    depends_on:
      - badatabase_primary

  kdc-kadmin:
    build: ./kerberos/kdc-kadmin
    env_file: ./kerberos/kerberos.env
    volumes:
      # This is needed otherwise there won't be enough entropy to generate a new kerberos realm
      - /dev/urandom:/dev/random
      - keytab:/keytab

  kerberos-client:
    build: ./kerberos/kerberos-client
    env_file: ./kerberos/kerberos.env
    depends_on:
      - kdc-kadmin

volumes:
  pgdata_primary:
  pgdata_replica:
  keytab:
